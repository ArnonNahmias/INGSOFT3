name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    name: Build Frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'front/package-lock.json'
    
    - name: Install Frontend Dependencies
      run: |
        cd front
        npm ci
    
    - name: Build Frontend
      run: |
        cd front
        npm run build
    
    - name: Upload Frontend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: front/.next

  backend-build:
    runs-on: ubuntu-latest
    name: Build Backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'back/package-lock.json'
    
    - name: Install Backend Dependencies
      run: |
        cd back
        npm ci
    
    - name: Build Backend
      run: |
        cd back
        npm run build
    
    - name: Upload Backend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: back/dist

  database-setup:
    runs-on: ubuntu-latest
    name: Database Setup
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: postsdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h 127.0.0.1 --silent; do
          echo 'Waiting for MySQL...'
          sleep 1
        done
    
    - name: Verify Database Connection
      run: |
        mysql -h 127.0.0.1 -u root -e "SHOW DATABASES;"
        mysql -h 127.0.0.1 -u root -e "USE postsdb; SHOW TABLES;"

  health-check:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build, database-setup]
    name: Health Check
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: postsdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Download Backend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build
        path: back/dist
    
    - name: Install Backend Dependencies
      run: |
        cd back
        npm ci --only=production
    
    - name: Start Backend Server
      run: |
        cd back
        npm start &
        sleep 10
    
    - name: Health Check - Auth Endpoint
      run: |
        curl -f http://localhost:3001/api/auth/health || exit 1
    
    - name: Health Check - Posts Endpoint  
      run: |
        curl -f http://localhost:3001/api/posts/health || exit 1